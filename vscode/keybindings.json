[
  {
    "key": "alt+up",
    "command": "-editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+i",
    "command": "cursorUp",
    "when": "textInputFocus"
  },
  {
    "key": "up",
    "command": "-cursorUp",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+i",
    "command": "cursorUpSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+up",
    "command": "-cursorUpSelect",
    "when": "textInputFocus"
  },
  {
    "key": "shift+alt+.",
    "command": "cursorBottom",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+end",
    "command": "-cursorBottom",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+k",
    "command": "cursorDown",
    "when": "textInputFocus"
  },
  {
    "key": "down",
    "command": "-cursorDown",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+e",
    "command": "cursorEnd",
    "when": "textInputFocus"
  },
  {
    "key": "end",
    "command": "-cursorEnd",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+a",
    "command": "cursorHome",
    "when": "textInputFocus"
  },
  {
    "key": "home",
    "command": "-cursorHome",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+j",
    "command": "cursorLeft",
    "when": "textInputFocus"
  },
  {
    "key": "left",
    "command": "-cursorLeft",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+l",
    "command": "cursorRight",
    "when": "textInputFocus"
  },
  {
    "key": "right",
    "command": "-cursorRight",
    "when": "textInputFocus"
  },
  {
    "key": "shift+alt+,",
    "command": "cursorTop",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+home",
    "command": "-cursorTop",
    "when": "textInputFocus"
  },
  {
    "key": "alt+j",
    "command": "cursorWordLeft",
    "when": "textInputFocus && !accessibilityModeEnabled"
  },
  {
    "key": "ctrl+left",
    "command": "-cursorWordLeft",
    "when": "textInputFocus && !accessibilityModeEnabled"
  },
  {
    "key": "shift+alt+left",
    "command": "cursorWordLeftSelect",
    "when": "textInputFocus && !accessibilityModeEnabled"
  },
  {
    "key": "ctrl+shift+left",
    "command": "-cursorWordLeftSelect",
    "when": "textInputFocus && !accessibilityModeEnabled"
  },
  {
    "key": "alt+l",
    "command": "cursorWordEndRight",
    "when": "textInputFocus && !accessibilityModeEnabled"
  },
  {
    "key": "ctrl+right",
    "command": "-cursorWordEndRight",
    "when": "textInputFocus && !accessibilityModeEnabled"
  },
  {
  "key": "alt+d",
  "command": "deleteWordLeft",
  "when": "textInputFocus && !editorReadonly"
},
{
  "key": "ctrl+backspace",
  "command": "-deleteWordLeft",
  "when": "textInputFocus && !editorReadonly"
},
{
  "key": "alt+f",
  "command": "deleteWordRight",
  "when": "textInputFocus && !editorReadonly"
},
{
  "key": "ctrl+delete",
  "command": "-deleteWordRight",
  "when": "textInputFocus && !editorReadonly"
},
{
  "key": "up",
  "command": "cursorUp",
  "when": "textInputFocus"
},
{
  "key": "down",
  "command": "cursorDown",
  "when": "textInputFocus"
},
{
  "key": "left",
  "command": "cursorLeft",
  "when": "textInputFocus"
},
{
  "key": "right",
  "command": "cursorRight",
  "when": "textInputFocus"
},
{
  "key": "ctrl+space",
  "command": "extension.setMark",
  "when": "!findWidgetVisible"
},
{
  "key": "ctrl+g",
  "command": "search.action.cancel",
  "when": "listFocus && searchViewletVisible && !inputFocus && !treestickyScrollFocused && searchState != '0'"
},
{
  "key": "ctrl+g",
  "command": "cancelSelection",
  "when": "editorHasSelection && textInputFocus"
},
{
  "key": "shift+escape",
  "command": "-cancelSelection",
  "when": "editorHasSelection && textInputFocus"
},
{
  "key": "ctrl+g",
  "command": "editor.cancelOperation",
  "when": "cancellableOperation"
},
{
  "key": "alt+g alt+g",
  "command": "workbench.action.gotoLine"
},
{
  "key": "ctrl+g",
  "command": "-workbench.action.gotoLine"
},
{
  "key": "ctrl+g",
  "command": "cancelRenameInput",
  "when": "editorFocus && renameInputVisible"
},
{
  "key": "shift+escape",
  "command": "-cancelRenameInput",
  "when": "editorFocus && renameInputVisible"
},
{
  "key": "ctrl+g",
  "command": "cancelLinkedEditingInput",
  "when": "LinkedEditingInputVisible && editorTextFocus"
},
{
  "key": "shift+escape",
  "command": "-cancelLinkedEditingInput",
  "when": "LinkedEditingInputVisible && editorTextFocus"
},
{
  "key": "ctrl+x ctrl+s",
  "command": "workbench.action.files.save"
},
{
  "key": "ctrl+s",
  "command": "-workbench.action.files.save"
},
{
  "key": "ctrl+x s",
  "command": "workbench.action.files.saveFiles"
},
{
  "key": "ctrl+s",
  "command": "actions.find",
  "when": "editorFocus || editorIsOpen && !findInputFocussed"
},
{
  "key": "ctrl+f",
  "command": "-actions.find",
  "when": "editorFocus || editorIsOpen"
},
{
  "key": "ctrl+n",
  "command": "editor.action.nextMatchFindAction",
  "when": "editorFocus"
},
{
  "key": "f3",
  "command": "-editor.action.nextMatchFindAction",
  "when": "editorFocus"
},
{
  "key": "ctrl+n",
  "command": "editor.action.nextMatchFindAction",
  "when": "editorFocus && findWidgetVisible && replaceInputFocussed"
},
{
  "key": "enter",
  "command": "-editor.action.nextMatchFindAction",
  "when": "editorFocus && findInputFocussed"
},
{
  "key": "ctrl+r",
  "command": "editor.action.previousMatchFindAction",
  "when": "editorFocus && findInputFocussed"
},
{
  "key": "shift+enter",
  "command": "-editor.action.previousMatchFindAction",
  "when": "editorFocus && findInputFocussed"
},
{
  "key": "ctrl+q",
  "command": "editor.action.startFindReplaceAction",
  "when": "editorFocus || editorIsOpen"
},
{
  "key": "ctrl+h",
  "command": "-editor.action.startFindReplaceAction",
  "when": "editorFocus || editorIsOpen"
},
{
  "key": "enter",
  "command": "-editor.action.replaceOne",
  "when": "editorFocus && findWidgetVisible && replaceInputFocussed"
},
{
  "key": "ctrl+space",
  "command": "editor.action.replaceOne",
  "when": "editorFocus && findWidgetVisible && replaceInputFocussed"
},
{
  "key": "ctrl+shift+1",
  "command": "-editor.action.replaceOne",
  "when": "editorFocus && findWidgetVisible"
},
{
  "key": "ctrl+enter",
  "command": "editor.action.replaceAll",
  "when": "editorFocus && findWidgetVisible"
},
{
  "key": "ctrl+alt+enter",
  "command": "-editor.action.replaceAll",
  "when": "editorFocus && findWidgetVisible"
},
{
  "key": "ctrl+shift+1",
  "command": "-search.action.replaceAllInFolder",
  "when": "folderMatchFocus && isEditableItem && replaceActive && searchViewletVisible"
},
{
  "key": "ctrl+shift+enter",
  "command": "-search.action.replaceAllInFolder",
  "when": "folderMatchFocus && isEditableItem && replaceActive && searchViewletVisible"
},
{
  "key": "ctrl+shift+1",
  "command": "-search.action.replaceAllInFile",
  "when": "fileMatchFocus && isEditableItem && replaceActive && searchViewletVisible"
},
{
  "key": "ctrl+shift+enter",
  "command": "-search.action.replaceAllInFile",
  "when": "fileMatchFocus && isEditableItem && replaceActive && searchViewletVisible"
},
{
  "key": "ctrl+alt+enter",
  "command": "-search.action.replaceAll",
  "when": "replaceActive && searchViewletVisible && !findWidgetVisible"
},
{
  "key": "ctrl+shift+1",
  "command": "-search.action.replace",
  "when": "isEditableItem && matchFocus && replaceActive && searchViewletVisible"
},
{
  "key": "escape",
  "command": "-closeReplaceInFilesWidget",
  "when": "replaceInputBoxFocus && searchViewletVisible"
},
{
  "key": "ctrl+shift+h",
  "command": "-workbench.action.replaceInFiles"
},
{
  "key": "ctrl+shift+.",
  "command": "-editor.action.inPlaceReplace.down",
  "when": "editorTextFocus && !editorReadonly"
},
{
  "key": "ctrl+shift+,",
  "command": "-editor.action.inPlaceReplace.up",
  "when": "editorTextFocus && !editorReadonly"
},
{
  "key": "ctrl+p",
  "command": "workbench.action.quickOpen"
},
{
  "key": "ctrl+p",
  "command": "-workbench.action.quickOpen"
},
{
  "key": "ctrl+g",
  "command": "closeFindWidget",
  "when": "editorFocus && findWidgetVisible && !isComposing"
},
{
  "key": "enter",
  "command": "closeFindWidget",
  "when": "editorFocus && findWidgetVisible && !isComposing"
},
{
  "key": "shift+escape",
  "command": "-closeFindWidget",
  "when": "editorFocus && findWidgetVisible && !isComposing"
},
{
  "key": "ctrl+1",
  "command": "-workbench.action.focusFirstEditorGroup"
},
{
  "key": "ctrl+1",
  "command": "workbench.action.focusNextGroup"
},
{
  "key": "ctrl+2",
  "command": "workbench.action.showEditorsInActiveGroup"
},
{
  "key": "ctrl+2",
  "command": "-workbench.action.focusSecondEditorGroup"
},
{
  "key": "ctrl+3",
  "command": "-workbench.action.focusThirdEditorGroup"
},
{
  "key": "ctrl+tab",
  "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
  "when": "!activeEditorGroupEmpty"
},
{
  "key": "ctrl+x ctrl+x",
  "command": "editor.action.clipboardCutAction"
},
{
  "key": "ctrl+x",
  "command": "-editor.action.clipboardCutAction"
},
{
  "key": "ctrl+r",
  "command": "-workbench.action.openRecent"
},
{
  "key": "ctrl+r",
  "command": "-jupyter.refreshDataViewer",
  "when": "isWorkspaceTrusted && jupyter.dataViewerActive"
},
{
  "key": "ctrl+r",
  "command": "-python.refreshTensorBoard",
  "when": "python.hasActiveTensorBoardSession"
},
{
  "key": "ctrl+shift+r",
  "command": "-editor.action.refactor",
  "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
},
{
  "key": "ctrl+shift+r",
  "command": "-rerunSearchEditorSearch",
  "when": "inSearchEditor"
},
{
  "key": "ctrl+r",
  "command": "-workbench.action.terminal.runRecentCommand",
  "when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
},
{
  "key": "ctrl+alt+r",
  "command": "-workbench.action.terminal.runRecentCommand",
  "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
},
{
  "key": "ctrl+; ctrl+r",
  "command": "-testing.refreshTests",
  "when": "testing.canRefresh"
},
{
  "key": "ctrl+shift+r ctrl+i",
  "command": "-editor.action.codeAction",
  "when": "editorTextFocus && editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"
},
{
  "key": "ctrl+shift+r ctrl+e",
  "command": "-editor.action.codeAction",
  "when": "editorTextFocus && editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"
},
{
  "key": "ctrl+r",
  "command": "-inlineChat.regenerate",
  "when": "inlineChatHasProvider && inlineChatVisible"
},
{
  "key": "ctrl+k r",
  "command": "-workbench.action.files.revealActiveFileInWindows"
},
{
  "key": "ctrl+r",
  "command": "-workbench.action.quickOpenNavigateNextInRecentFilesPicker",
  "when": "inQuickOpen && inRecentFilesPicker"
},
{
  "key": "ctrl+shift+r",
  "command": "-workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
  "when": "inQuickOpen && inRecentFilesPicker"
},
{
  "key": "ctrl+alt+r",
  "command": "-workbench.action.terminal.sendSequence",
  "when": "accessibilityModeEnabled && terminalFocus"
},
{
  "key": "ctrl+r",
  "command": "-workbench.action.reloadWindow",
  "when": "isDevelopment"
},
{
  "key": "ctrl+k ctrl+r",
  "command": "-git.revertSelectedRanges",
  "when": "isInDiffEditor && !operationInProgress"
},
{
  "key": "ctrl+k ctrl+r",
  "command": "-workbench.action.keybindingsReference"
},
{
  "key": "ctrl+k ctrl+j",
  "command": "-editor.unfoldAll",
  "when": "editorTextFocus && foldingEnabled"
},
{
  "key": "ctrl+j",
  "command": "-workbench.action.togglePanel"
},
{
  "key": "ctrl+shift+j",
  "command": "-workbench.action.search.toggleQueryDetails",
  "when": "inSearchEditor || searchViewletFocus"
},
{
  "key": "ctrl+i",
  "command": "-workbench.action.chat.startVoiceChat",
  "when": "chatIsEnabled && hasSpeechProvider && inChatInput && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress && !terminalChatActiveRequest || chatIsEnabled && hasSpeechProvider && inlineChatFocused && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress && !terminalChatActiveRequest"
},
{
  "key": "ctrl+alt+i",
  "command": "-workbench.action.chat.open"
},
{
  "key": "ctrl+i",
  "command": "-workbench.action.chat.stopListeningAndSubmit",
  "when": "inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'terminal' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'view' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'terminal' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'view'"
},
{
  "key": "ctrl+k ctrl+i",
  "command": "-editor.debug.action.showDebugHover",
  "when": "editorTextFocus && inDebugMode"
},
{
  "key": "ctrl+shift+i",
  "command": "-workbench.action.toggleDevTools",
  "when": "isDevelopment"
},
{
  "key": "ctrl+k i",
  "command": "-inlineChat.start",
  "when": "editorFocus && inlineChatHasProvider && inlineChatPossible && !editorReadonly"
},
{
  "key": "ctrl+i",
  "command": "-inlineChat.start",
  "when": "editorFocus && inlineChatHasProvider && inlineChatPossible && !editorReadonly"
},
{
  "key": "ctrl+i",
  "command": "-workbench.action.terminal.chat.focusInput",
  "when": "terminalChatFocus && !inlineChatFocused"
},
{
  "key": "ctrl+i",
  "command": "-workbench.action.terminal.chat.start",
  "when": "terminalChatAgentRegistered && terminalFocusInAny && terminalHasBeenCreated || terminalChatAgentRegistered && terminalFocusInAny && terminalProcessSupported"
},
{
  "key": "ctrl+alt+o ctrl+i",
  "command": "-org.clockin",
  "when": "editorLangId == 'org'"
},
{
  "key": "ctrl+alt+o i",
  "command": "-org.italic",
  "when": "editorLangId == 'org'"
},
{
  "key": "ctrl+k ctrl+i",
  "command": "-editor.action.showHover",
  "when": "editorTextFocus"
},
{
  "key": "ctrl+k ctrl+i",
  "command": "-workbench.action.terminal.focusHover",
  "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalIsOpen || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
},
{
  "key": "ctrl+; ctrl+shift+i",
  "command": "-testing.toggleInlineCoverage"
},
{
  "key": "ctrl+; ctrl+i",
  "command": "-testing.toggleInlineTestOutput"
},
{
  "key": "ctrl+i",
  "command": "-editor.action.triggerSuggest",
  "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
},
{
  "key": "ctrl+i",
  "command": "-focusSuggestion",
  "when": "suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
},
{
  "key": "ctrl+i",
  "command": "-inlineChat.holdForSpeech",
  "when": "hasSpeechProvider && inlineChatHasProvider && inlineChatVisible && textInputFocus"
},
{
  "key": "ctrl+k ctrl+i",
  "command": "-list.showHover",
  "when": "listFocus && !inputFocus && !treestickyScrollFocused"
},
{
  "key": "ctrl+k i",
  "command": "-notebook.cell.chat.start",
  "when": "config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus"
},
{
  "key": "ctrl+i",
  "command": "-notebook.cell.chat.start",
  "when": "config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus"
},
{
  "key": "ctrl+i",
  "command": "-toggleSuggestionDetails",
  "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
},
{
  "key": "ctrl+i",
  "command": "-workbench.action.chat.holdToVoiceChatInChatView",
  "when": "chatIsEnabled && hasSpeechProvider && !chatSessionRequestInProgress && !editorFocus && !inChatInput && !inlineChatFocused && !notebookEditorFocused"
},
{
  "key": "ctrl+shift+i",
  "command": "-workbench.action.quickchat.toggle",
  "when": "chatIsEnabled"
},
{
  "key": "ctrl+l",
  "command": "-workbench.action.chat.newChat",
  "when": "chatIsEnabled && inChat"
},
{
  "key": "ctrl+l",
  "command": "-expandLineSelection",
  "when": "textInputFocus"
},
{
  "key": "ctrl+l",
  "command": "-notebook.centerActiveCell",
  "when": "notebookEditorFocused"
},
{
  "key": "ctrl+alt+o l",
  "command": "-org.literal",
  "when": "editorLangId == 'org'"
},
{
  "key": "ctrl+shift+l",
  "command": "-selectAllSearchEditorMatches",
  "when": "inSearchEditor"
},
{
  "key": "ctrl+shift+l",
  "command": "-editor.action.selectHighlights",
  "when": "editorFocus"
},
{
  "key": "ctrl+; ctrl+l",
  "command": "-testing.debugLastRun"
},
{
  "key": "ctrl+; l",
  "command": "-testing.reRunLastRun"
},
{
  "key": "ctrl+; ctrl+shift+l",
  "command": "-testing.coverageLastRun"
},
{
  "key": "ctrl+k ctrl+l",
  "command": "-editor.toggleFold",
  "when": "editorTextFocus && foldingEnabled"
},
{
  "key": "ctrl+k ctrl+shift+l",
  "command": "-editor.toggleFoldRecursively",
  "when": "editorTextFocus && foldingEnabled"
},
{
  "key": "ctrl+shift+l",
  "command": "-addCursorsAtSearchResults",
  "when": "fileMatchOrMatchFocus && searchViewletVisible"
},
{
  "key": "alt+l",
  "command": "-toggleSearchEditorContextLines",
  "when": "inSearchEditor"
},
{
  "key": "alt+l",
  "command": "-toggleFindInSelection",
  "when": "editorFocus"
},
{
  "key": "alt+win+j",
  "command": "-notebook.cell.joinBelow",
  "when": "notebookEditorFocused"
},
{
  "key": "shift+alt+win+j",
  "command": "-notebook.cell.joinAbove",
  "when": "notebookEditorFocused"
},
{
  "key": "shift+alt+i",
  "command": "-editor.action.insertCursorAtEndOfEachLineSelected",
  "when": "editorTextFocus"
},
{
  "key": "alt+k",
  "command": "-editor.action.accessibilityHelpConfigureKeybindings",
  "when": "accessibilityHelpIsShown && accessibleViewHasUnassignedKeybindings"
},
{
  "key": "alt+k",
  "command": "-keybindings.editor.recordSearchKeys",
  "when": "inKeybindings && inKeybindingsSearch"
},
{
  "key": "ctrl+k",
  "command": "selectNextSuggestion",
  "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
},
{
  "key": "ctrl+down",
  "command": "-selectNextSuggestion",
  "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
},
{
  "key": "ctrl+i",
  "command": "selectPrevSuggestion",
  "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
},
{
  "key": "ctrl+up",
  "command": "-selectPrevSuggestion",
  "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
},
{
  "key": "ctrl+shift+up",
  "command": "-extension.vertical-jump.cursorBlockFirstLineSelect",
  "when": "editorTextFocus"
},
{
  "key": "ctrl+shift+down",
  "command": "-extension.vertical-jump.cursorBlockLastLineSelect",
  "when": "editorTextFocus"
},
{
  "key": "ctrl+up",
  "command": "-extension.vertical-jump.cursorBlockFirstLine",
  "when": "editorTextFocus"
},
{
  "key": "ctrl+down",
  "command": "-extension.vertical-jump.cursorBlockLastLine",
  "when": "editorTextFocus"
},
{
  "key": "alt+k",
  "command": "spaceBlockJumper.moveDown"
},
{
  "key": "alt+i",
  "command": "spaceBlockJumper.moveUp"
},
{
  "key": "ctrl+space",
  "command": "-workbench.action.terminal.sendSequence",
  "when": "terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'"
},
{
  "key": "ctrl+backspace",
  "command": "-workbench.action.terminal.sendSequence",
  "when": "terminalFocus"
},
{
  "key": "ctrl+backspace",
  "command": "-workbench.action.terminal.sendSequence",
  "when": "terminalFocus && terminalShellType == 'cmd'"
},
{
  "key": "ctrl+space",
  "command": "-workbench.action.terminal.sendSequence",
  "when": "config.terminal.integrated.suggest.enabled && terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'"
},
{
  "key": "ctrl+space",
  "command": "-toggleSuggestionDetails",
  "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
},
{
  "key": "ctrl+alt+space",
  "command": "-toggleSuggestionFocus",
  "when": "suggestWidgetVisible && textInputFocus"
},
{
  "key": "ctrl+space",
  "command": "-focusSuggestion",
  "when": "suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
},
{
  "key": "ctrl+space",
  "command": "-editor.action.triggerSuggest",
  "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
},
{
  "key": "ctrl+shift+space",
  "command": "-editor.action.triggerParameterHints",
  "when": "editorHasSignatureHelpProvider && editorTextFocus"
},
{
  "key": "ctrl+shift+backspace",
  "command": "-search.searchEditor.action.deleteFileResults",
  "when": "inSearchEditor"
},
{
  "key": "ctrl+alt+backspace",
  "command": "-editor.action.removeBrackets",
  "when": "editorTextFocus"
},
{
  "key": "ctrl+alt+win+n",
  "command": "-welcome.showNewFileEntries"
},
{
  "key": "ctrl+x ctrl+n",
  "command": "workbench.action.files.newUntitledFile"
},
{
  "key": "ctrl+n",
  "command": "-workbench.action.files.newUntitledFile"
},
{
  "key": "ctrl+k ctrl+n",
  "command": "-git.unstageSelectedRanges",
  "when": "isInDiffEditor && !operationInProgress"
},
{
  "key": "ctrl+k ctrl+shift+n",
  "command": "-notifications.showList"
},
{
  "key": "shift+enter",
  "command": "-jupyter.execSelectionInteractive",
  "when": "editorTextFocus && isWorkspaceTrusted && jupyter.ownsSelection && !findInputFocussed && !isCompositeNotebook && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
},
{
  "key": "shift+enter",
  "command": "-python.execInREPL",
  "when": "config.python.REPL.sendToNativeREPL && editorTextFocus && !accessibilityModeEnabled && !isCompositeNotebook && !jupyter.ownsSelection && !notebookEditorFocused && editorLangId == 'python'"
},
{
  "key": "shift+enter",
  "command": "-python.execSelectionInTerminal",
  "when": "editorTextFocus && !findInputFocussed && !isCompositeNotebook && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
},
{
  "key": "ctrl+alt+i",
  "command": "editor.action.insertCursorAbove",
  "when": "editorTextFocus"
},
{
  "key": "ctrl+alt+up",
  "command": "-editor.action.insertCursorAbove",
  "when": "editorTextFocus"
},
{
  "key": "ctrl+alt+k",
  "command": "editor.action.insertCursorBelow",
  "when": "editorTextFocus"
},
{
  "key": "ctrl+alt+down",
  "command": "-editor.action.insertCursorBelow",
  "when": "editorTextFocus"
},
{
  "key": "f7",
  "command": "-editor.action.accessibleDiffViewer.next",
  "when": "isInDiffEditor"
},
{
  "key": "shift+f7",
  "command": "-editor.action.accessibleDiffViewer.prev",
  "when": "isInDiffEditor"
},
{
  "key": "ctrl+right",
  "command": "-editor.action.inlineSuggest.acceptNextWord",
  "when": "inlineSuggestionVisible && !editorReadonly"
},
{
  "key": "ctrl+d",
  "command": "-editor.action.addSelectionToNextFindMatch",
  "when": "editorFocus"
},
{
  "key": "shift+alt+.",
  "command": "-editor.action.autoFix",
  "when": "textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
},
{
  "key": "alt+o",
  "command": "-C_Cpp.SwitchHeaderSource",
  "when": "editorTextFocus && editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"
},
{
  "key": "ctrl+f2",
  "command": "-editor.action.changeAll",
  "when": "editorTextFocus && !editorReadonly"
},
{
  "key": "escape",
  "command": "-editor.action.cancelSelectionAnchor",
  "when": "editorTextFocus && selectionAnchorSet"
},
{
  "key": "ctrl+k m",
  "command": "-workbench.action.editor.changeLanguageMode",
  "when": "!notebookEditorFocused"
},
{
  "key": "ctrl+enter",
  "command": "-workbench.action.chat.applyInEditor",
  "when": "accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat && !inChatInput"
},
{
  "key": "ctrl+enter",
  "command": "-workbench.action.chat.insertCodeBlock",
  "when": "accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat && !inChatInput"
},
{
  "key": "ctrl+alt+enter",
  "command": "-workbench.action.chat.runInTerminal",
  "when": "accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat"
},
{
  "key": "ctrl+alt+pagedown",
  "command": "-workbench.action.chat.nextCodeBlock",
  "when": "chatIsEnabled && inChat"
},
{
  "key": "ctrl+f9",
  "command": "-workbench.action.chat.nextFileTree",
  "when": "chatIsEnabled && inChat"
},
{
  "key": "ctrl+alt+pageup",
  "command": "-workbench.action.chat.previousCodeBlock",
  "when": "chatIsEnabled && inChat"
},
{
  "key": "ctrl+shift+f9",
  "command": "-workbench.action.chat.previousFileTree",
  "when": "chatIsEnabled && inChat"
},
{
  "key": "escape",
  "command": "-workbench.action.chat.stopListening",
  "when": "voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || voiceChatInProgress && scopedVoiceChatInProgress == 'terminal' || voiceChatInProgress && scopedVoiceChatInProgress == 'view'"
},
{
  "key": "escape",
  "command": "-workbench.action.speech.stopReadAloud",
  "when": "scopedChatSynthesisInProgress && textToSpeechInProgress"
},
{
  "key": "escape",
  "command": "-editor.debug.action.closeExceptionWidget",
  "when": "exceptionWidgetVisible"
},
{
  "key": "ctrl+shift+w",
  "command": "-workbench.action.closeWindow"
},
{
  "key": "alt+f4",
  "command": "-workbench.action.closeWindow"
},
{
  "key": "ctrl+k ctrl+alt+c",
  "command": "-workbench.action.addComment"
},
{
  "key": "alt+f10",
  "command": "-editor.action.nextCommentedRangeAction",
  "when": "activeEditorHasCommentingRange"
},
{
  "key": "ctrl+k ctrl+alt+down",
  "command": "-editor.action.nextCommentingRange",
  "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
},
{
  "key": "shift+alt+f10",
  "command": "-editor.action.previousCommentedRangeAction",
  "when": "activeEditorHasCommentingRange"
},
{
  "key": "ctrl+k ctrl+alt+up",
  "command": "-editor.action.previousCommentingRange",
  "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
},
{
  "key": "ctrl+insert",
  "command": "-editor.action.clipboardCopyAction"
},
{
  "key": "shift+alt+down",
  "command": "-editor.action.copyLinesDownAction",
  "when": "editorTextFocus && !editorReadonly"
},
{
  "key": "shift+alt+up",
  "command": "-editor.action.copyLinesUpAction",
  "when": "editorTextFocus && !editorReadonly"
},
{
  "key": "ctrl+k ctrl+,",
  "command": "-editor.createFoldingRangeFromSelection",
  "when": "editorTextFocus && foldingEnabled"
},
{
  "key": "shift+delete",
  "command": "-editor.action.clipboardCutAction"
},
{
  "key": "enter",
  "command": "-repl.action.acceptInput",
  "when": "inDebugRepl && textInputFocus"
},
{
  "key": "shift+f5",
  "command": "-workbench.action.debug.disconnect",
  "when": "focusedSessionIsAttach && inDebugMode"
},
{
  "key": "ctrl+pagedown",
  "command": "-workbench.action.debug.nextConsole",
  "when": "inDebugRepl"
},
{
  "key": "ctrl+pageup",
  "command": "-workbench.action.debug.prevConsole",
  "when": "inDebugRepl"
},
{
  "key": "shift+f9",
  "command": "-editor.debug.action.toggleInlineBreakpoint",
  "when": "editorTextFocus"
},
{
  "key": "ctrl+f5",
  "command": "-workbench.action.debug.run",
  "when": "debuggersAvailable && debugState != 'initializing'"
},
{
  "key": "ctrl+f11",
  "command": "-workbench.action.debug.stepIntoTarget",
  "when": "inDebugMode && stepIntoTargetsSupported && debugState == 'stopped'"
},
{
  "key": "f9",
  "command": "-editor.debug.action.toggleBreakpoint",
  "when": "debuggersAvailable && disassemblyViewFocus || debuggersAvailable && editorTextFocus"
},
{
  "key": "ctrl+k ctrl+k",
  "command": "-editor.action.defineKeybinding",
  "when": "resource == 'vscode-userdata:/c%3A/Users/spader/AppData/Roaming/Code/User/keybindings.json'"
},
{
  "key": "shift+alt+d",
  "command": "editor.action.deleteLines",
  "when": "textInputFocus && !editorReadonly"
},
{
  "key": "ctrl+shift+k",
  "command": "-editor.action.deleteLines",
  "when": "textInputFocus && !editorReadonly"
},
{
  "key": "shift+alt+d",
  "command": "-editor.detectLanguage",
  "when": "editorTextFocus && !notebookEditable"
},
{
  "key": "alt+f6",
  "command": "-editor.action.accessibleViewDisableHint",
  "when": "accessibilityHelpIsShown && accessibleViewVerbosityEnabled || accessibleViewIsShown && accessibleViewVerbosityEnabled"
},
{
  "key": "tab",
  "command": "-editor.emmet.action.expandAbbreviation",
  "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
},
{
  "key": "shift+alt+right",
  "command": "-editor.action.smartSelect.expand",
  "when": "editorTextFocus"
},
{
  "key": "ctrl+k c",
  "command": "-workbench.files.action.compareWithClipboard"
},
{
  "key": "ctrl+k d",
  "command": "-workbench.files.action.compareWithSaved"
},
{
  "key": "ctrl+shift+b",
  "command": "-workbench.action.tasks.build",
  "when": "taskCommandsRegistered"
},
{
  "key": "ctrl+shift+b",
  "command": "workbench.action.tasks.runTask"
}
]